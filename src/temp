
// fn ui<B: Backend>(f: &mut Frame<B>) {

//    let chunks = Layout::default()
//         .direction(Direction::Vertical)
//         .margin(1)
//         .constraints(
//             [
//                 Constraint::Length(40),
//                 Constraint::Length(60),
//                 // Constraint::Ratio(2, 10),
//                 // Constraint::Ratio(3, 5),
//                 // Constraint::Percentage(80),
//             ].as_ref()
//         )
//         .direction(Direction::Horizontal)
//         .split(f.size());

//     let content = Text::raw("random text");


//     let block = Block::default()
//          .title("1")
//          .borders(Borders::ALL);

//     let paragraph = Paragraph::new(content)
//         .block(block)
//         .style(Style::default().fg(Color::White).bg(Color::Black));
//     

//     f.render_widget(paragraph, chunks[0]);

//     let barchart = BarChart::default()
//         .block(Block::default().title("2").borders(Borders::ALL))
//         .bar_width(7)
//         .bar_gap(1)
//         .value_style(Style::default().bg(Color::Rgb(40, 200, 200)))
//         .data(&[("B0", 0), ("B1", 2), ("B2", 4), ("B3", 3)])
//         .label_style(
//             Style::default()
//                 .fg(Color::Cyan)
//                 .add_modifier(Modifier::ITALIC),
//         );

//     f.render_widget(barchart, chunks[1]);
// }

---------------------------------------------------------------------------

// // need to check for the possible x,y plane
// let frames = Layout::default()
//     .direction(Direction::Vertical)
//     .constraints([
//         Constraint::Percentage(20),
//         Constraint::Length(15),
//     ].as_ref())
//     // this represent the rectangle where stuff are displayed
//     .split(Rect {
//         x: 10,
//         y: 2,
//         width: 100,
//         height: 40,
//     });

// let frame2 = Layout::default()
//     .direction(Direction::Horizontal)
//     .constraints([
//         Constraint::Percentage(20),
//         Constraint::Percentage(20),
//         Constraint::Percentage(20),
//         Constraint::Percentage(20),
//     ].as_ref())
//     // this represent the rectangle where stuff are displayed
//     // f.size get's the Rect instance for the current terminal session
//     .split(f.size());

// let frame3 = Block::default()
//     .style(
//         Style::default()
//         .fg(Color::Blue)
//         .add_modifier(Modifier::BOLD | Modifier::ITALIC)
//     )
//     .title("test")
//     .borders(Borders::ALL)
//     .inner(Rect {
//         x: 40,
//         y: 20,
//         width: 40,
//         height: 15,
//     });


// get_block(String::from("hello"));
// let mut i = 0;
// for frame in frames {
//     f.render_widget(get_block(i.to_string()), frame);
//     i+=1;
// }

